plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

// Auto-increment version code on each build
def getVersionCode() {
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.exists()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        return code
    } else {
        def code = 2  // Starting from 2 since this is our second build
        def Properties versionProps = new Properties()
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        return code
    }
}

def autoVersionCode = getVersionCode()

android {
    namespace 'com.example.timereportcalculator'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.timereportcalculator"
        minSdk 21
        targetSdk 34
        versionCode autoVersionCode
        versionName "Beta 1.1.${autoVersionCode}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    
    // Custom APK naming
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def versionName = variant.versionName.replace("Beta ", "").replace("-debug", "")
            def buildType = variant.buildType.name
            if (buildType == "release") {
                outputFileName = "Tidsregistrerings-Kalkylator-${versionName}.apk"
            } else if (buildType == "debug") {
                outputFileName = "Tidsregistrerings-Kalkylator-${versionName}-debug-beta.apk"
            }
        }
        
        // Copy APK to androidbuild/files directory after assembly
        variant.assemble.doLast {
            variant.outputs.each { output ->
                def apkFile = output.outputFile
                if (apkFile != null && apkFile.exists()) {
                    def destinationDir = file('/workspace/androidbuild/files')
                    destinationDir.mkdirs()
                    def destinationFile = new File(destinationDir, apkFile.name)
                    
                    // Copy file
                    destinationFile.bytes = apkFile.bytes
                    
                    println "APK copied to: ${destinationFile.absolutePath}"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += '/META-INF/DEPENDENCIES'
            excludes += '/META-INF/LICENSE'
            excludes += '/META-INF/LICENSE.txt'
            excludes += '/META-INF/NOTICE'
            excludes += '/META-INF/NOTICE.txt'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.7.6'
    
    // JSON serialization for offline storage
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // File picker for easy file operations
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    
    // Calendar functionality with native Android components
    implementation 'androidx.compose.material:material-icons-extended'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.02.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}